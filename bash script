https://oregon.bootcampcontent.com/Oregon_Coding_Bootcamp/uofo-por-cyber-pt-07-2020-u-c/tree/master/Week%2006-Bash-Scripting-and-Programming/1/Activities/12_STU_Custom_Commands/Solved
#!/bin/bash

mkdir ~/research 2> /dev/null

echo "A Quick System Audit Script" > ~/research/sys_info.txt
date >> ~/research/sys_info.txt
echo "" >> ~/research/sys_info.txt
echo "Machine Type Info:" >> ~/research/sys_info.txt
echo $MACHTYPE >> ~/research/sys_info.txt
echo -e "Uname info: $(uname -a) \n" >> ~/research/sys_info.txt
echo -e "IP Info: $(ip addr | head -9 | tail -1) \n" >> ~/research/sys_info.txt
echo -e "Hostname: $(hostname -s) \n" >> ~/research/sys_info.txt
echo "DNS Servers: " >> ~/research/sys_info.txt
cat /etc/resolv.conf >> ~/research/sys_info.txt
echo -e "\nMemory Info:" >> ~/research/sys_info.txt
free >> ~/research/sys_info.txt
echo -e "\nCPU Info:" >> ~/research/sys_info.txt
lscpu | grep CPU >> ~/research/sys_info.txt
echo -e "\nDisk Usage:" >> ~/research/sys_info.txt
df -H | head -2 >> ~/research/sys_info.txt
echo -e "\nWho is logged in: \n $(who -a) \n" >> ~/research/sys_info.txt
echo -e "\nSUID Files:" >> ~/research/sys_info.txt
sudo find / -type f -perm /4000 >> ~/research/sys_info.txt
echo -e "\nTop 10 Processes" >> ~/research/sys_info.txt
ps aux --sort -%mem | awk {'print $1, $2, $3, $4, $11'} | head >> ~/research/sys_info.txt

useful loop
#!/bin/bash

# Define packages list
packages=(
    'nano'
    'wget'
    'net-tools'
)

# loop though the list of packages and show if they are installed
for package in ${packages[@]};
do
    if [ $(which $package) ]
    then 
        echo "$package is installed at $(which $package)."
    else
        echo "$package is not installed."
    fi
done


# Search each user's home directory for scripts and provide a formatted output.
for user in $(ls /home);
do   
    for item in $(find /home/$user -iname '*.sh');
    do 
        echo -e "Found a script in $user's home folder! \n$item"
    done
done


# loop through scripts in the scripts folder and change the permissions to execute 
for script in $(ls ~/scripts);
do 
    if [ ! -x ~/scripts/$script ]
    then
        chmod +x ~/scripts/$script
    fi
done


# loop through a group of files and create a hash of each file.
# we assume files_for_hashing/ exists and contains at least one file
for file in $(ls ~/Documents/files_for_hashing/);
do
    sha256sum $file
done

sys info_2
#!/bin/bash

#Check if script was run as root. Exit if false.
if [ $UID -ne 0 ]
then
  echo "Please run this script as root."
  exit
fi

# Define Variables
output=$HOME/research/sys_info.txt
ip=$(ip addr | grep inet | tail -2 | head -1)
suids=$(sudo find / -type f -perm /4000 2> /dev/null)
cpu=$(lscpu | grep CPU)
disk=$(df -H | head -2)

# Define Lists to use later
commands=(
  'date'
  'uname -a'
  'hostname -s'
)

files=(
  '/etc/passwd'
  '/etc/shadow'
  '/etc/hosts'
)

#Check for research directory. Create it if needed.
if [ ! -d $HOME/research ]
then
 mkdir $HOME/research
fi

# Check for output file. Clear it if needed.
if [ -f $output ]
then
  > $output
fi

##################################################
#Start Script

echo "A Quick System Audit Script" >> $output
echo "" >> $output

for x in {0..2}
do
  results=$(${commands[$x]})
  echo "Results of "${commands[$x]}" command:" >> $output
  echo $results >> $output
  echo "" >> $output
done

# Display Machine type
echo "Machine Type Info:" >> $output
echo -e "$MACHTYPE \n" >> $output

# Display IP Address info
echo -e "IP Info:" >> $output
echo -e "$ip \n" >> $output

# Display Memory usage
echo -e "\nMemory Info:" >> $output
free >> $output

#Display CPU usage
echo -e "\nCPU Info:" >> $output
lscpu | grep CPU >> $output

# Display Disk usage
echo -e "\nDisk Usage:" >> $output
df -H | head -2 >> $output

#Display who is logged in
echo -e "\nCurrent user login information: \n $(who -a) \n" >> $output

# Display DNS Info
echo "DNS Servers: " >> $output
cat /etc/resolv.conf >> $output

# List SUID files
echo -e "\nSUID Files:" >> $output
for suid in $suids
do
  echo $suid >> $output
done

# List top 10 processes
echo -e "\nTop 10 Processes" >> $output
ps aux --sort -%mem | awk {'print $1, $2, $3, $4, $11'} | head >> $output

# Check the permissions on files
echo -e "\nThe permissions for sensitive /etc files: \n" >> $output
for file in ${files[@]}
do
  ls -l $file >> $output
done

